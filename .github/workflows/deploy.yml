name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build application
        run: npm run build
        env:
          # Build-time environment variables
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_ADMIN_URL: ${{ vars.NEXT_PUBLIC_ADMIN_URL }}
          NEXT_PUBLIC_SHOPIFY_DOMAIN: ${{ vars.SHOPIFY_DOMAIN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
        env:
          # Runtime environment variables (passed to Vercel)
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_POOL_SIZE: ${{ vars.DATABASE_POOL_SIZE }}
          
          # Shopify Configuration
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SHOPIFY_SCOPES: ${{ vars.SHOPIFY_SCOPES }}
          SHOPIFY_WEBHOOK_SECRET: ${{ secrets.SHOPIFY_WEBHOOK_SECRET }}
          SHOPIFY_DOMAIN: ${{ vars.SHOPIFY_DOMAIN }}
          SHOPIFY_STOREFRONT_ACCESS_TOKEN: ${{ secrets.SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
          
          # R2 Storage
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
          R2_SECRET: ${{ secrets.R2_SECRET }}
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
          R2_PUBLIC_URL: ${{ vars.R2_PUBLIC_URL }}
          
          # Authentication
          NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          
          # Monitoring
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          
          # Feature Flags
          FEATURE_ADVANCED_ANALYTICS: ${{ vars.FEATURE_ADVANCED_ANALYTICS }}
          FEATURE_SOCIAL_IMPORT: ${{ vars.FEATURE_SOCIAL_IMPORT }}
          FEATURE_PERFORMANCE_MONITORING: ${{ vars.FEATURE_PERFORMANCE_MONITORING }}
          
          # Internal tokens
          INTERNAL_API_TOKEN: ${{ secrets.INTERNAL_API_TOKEN }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}

      - name: Verify deployment
        run: |
          echo "Deployment URL: ${{ steps.deploy.outputs.preview-url }}"
          curl -f -s -o /dev/null -w "%{http_code}" "${{ steps.deploy.outputs.preview-url }}" || exit 1

      - name: Run smoke tests
        run: npm run test:e2e:smoke
        env:
          PLAYWRIGHT_BASE_URL: ${{ steps.deploy.outputs.preview-url }}
          
      - name: Notify Sentry of deployment
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ github.sha }}