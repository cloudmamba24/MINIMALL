name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies (frozen)
        run: npm ci

      - name: Set up env defaults
        run: |
          echo "ANALYTICS_ALLOWED_ORIGINS=${{ secrets.ANALYTICS_ALLOWED_ORIGINS }}" >> $GITHUB_ENV
          echo "INTERNAL_API_TOKEN=${{ secrets.INTERNAL_API_TOKEN }}" >> $GITHUB_ENV
          echo "R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}" >> $GITHUB_ENV
          echo "R2_ACCESS_KEY=${{ secrets.R2_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "R2_SECRET=${{ secrets.R2_SECRET }}" >> $GITHUB_ENV
          echo "R2_BUCKET_NAME=${{ secrets.R2_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Run CI script
        run: npm run ci

      - name: Upload build artifacts (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: turbo-outputs
          path: .turbo

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint
        run: npx turbo lint --filter='@minimall/ui' --filter='@minimall/core' --filter='@minimall/db' --filter='@minimall/public' --filter='@minimall/admin'

      - name: Type check
        run: npm run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests
        run: npm test
        env:
          # Mock environment variables for tests
          R2_ENDPOINT: https://test.r2.cloudflarestorage.com
          R2_ACCESS_KEY: test-access-key
          R2_SECRET: test-secret
          R2_BUCKET_NAME: test-bucket
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          SHOPIFY_API_KEY: test-api-key

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: ./coverage
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build
        run: npm run build
        env:
          # Required build-time environment variables
          R2_ENDPOINT: https://test.r2.cloudflarestorage.com
          R2_ACCESS_KEY: test-access-key
          R2_SECRET: test-secret
          R2_BUCKET_NAME: test-bucket
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          NODE_ENV: production