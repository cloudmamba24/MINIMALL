Below is a **single, self-contained “context packet”** you can hand to any capable **AI coding agent** (or human dev) and they will have every critical detail to scaffold, implement, and deploy the platform we planned.
Copy-paste as one prompt—or split by sections—but keep the wording intact to preserve the precise instructions, constraints, and acceptance tests.

---

## 📂 0 — Meta-header (do **not** edit)

```
PROJECT_NAME = "Link-in-Bio Storefront Platform"
VERSION = "v0.1.0-alpha"
DATE = "2025-08-06"
```

---

## 1 — High-impact summary (1 minute read)

> Build a private Shopify-embedded app that generates ultra-fast, mobile-first “link-in-bio” micro-sites.
> Each micro-site is rendered from a JSON config, streams HTML with React 19 Server Components on Vercel Edge, hydrates only interactive islands (quick-view modal, cart), and funnels checkout to the merchant’s Shopify cart.
> Admin UI lives *inside* Shopify (iframe via App Bridge 2) and lets the merchant drag-drop cards / sliders, upload images, save versions, and publish instantly (config saved to R2 CDN + DB).
> Tech stack: **Next 15 (public & admin) • Bun edge runtime • tRPC v12 • Drizzle ORM • PlanetScale Prod / Neon Stage • Tailwind 4 + shadcn/ui • Polaris 12**.
> Must hit **LCP < 1.5 s**, **JS ≤ 120 kB first load**, **SEO HTML SSR**, and pass the acceptance checklist below.

---

## 2 — Repository layout

```
repo/
├─ apps/
│  ├─ public/        # Next 15 App Router (Edge)
│  └─ admin/         # Next 15 Pages Router (Shopify iframe)
├─ packages/
│  ├─ core/          # Shared types (SiteConfig), util funcs
│  ├─ ui/            # shadcn-ui components adapted for both apps
│  └─ db/            # Drizzle schema & migrations
├─ infra/
│  └─ terraform/     # Optional IaC for R2 bucket, PlanetScale
├─ .github/
│  └─ workflows/     # lint, test, build, deploy
└─ turbo.json        # TurboRepo pipeline
```

---

## 3 — Tech stack & versions (lock these)

| Layer            | Package / service                       | Version            |
| ---------------- | --------------------------------------- | ------------------ |
| Runtime          | **Bun**                                 | 1.3+               |
| Framework        | **Next.js**                             | 15.0.0-canary-edge |
| React            | **React**                               | 19 (stable)        |
| DB ORM           | **Drizzle**                             | 2.6+               |
| RPC              | **tRPC**                                | 12.x               |
| Styling          | **TailwindCSS**                         | 4.x                |
| Component kit    | **shadcn/ui**                           | 2025-07 snapshot   |
| Shopify admin UI | **@shopify/polaris**                    | 12.x               |
| Auth             | **@shopify/next-auth-app-bridge**       | latest             |
| Hosting          | **Vercel (Edge)**                       | 2025-08            |
| Storage          | **Cloudflare R2** (configs, images)     |                    |
| DB               | **PlanetScale prod** / **Neon staging** |                    |
| Tests            | **Playwright**                          | 1.44+              |
| Lint/format      | **Biome**                               | 1.6+               |

---

## 4 — Environment variables (prefix PUBLIC\_ if client-side)

| Key                                           | Example                                        | Scope         |
| --------------------------------------------- | ---------------------------------------------- | ------------- |
| `SHOPIFY_API_KEY`                             | `shpka_...`                                    | server        |
| `SHOPIFY_API_SECRET`                          | `shpss_...`                                    | server        |
| `SHOPIFY_SCOPES`                              | `read_products,write_checkouts,read_checkouts` | server        |
| `STOREFRONT_API_TOKEN`                        | `shpat_...`                                    | edge          |
| `DATABASE_URL`                                | PlanetScale prod DSN                           | server        |
| `R2_ENDPOINT` / `R2_ACCESS_KEY` / `R2_SECRET` | *…*                                            | server        |
| `JWT_SECRET`                                  | 64-byte hex                                    | edge          |
| `SENTRY_DSN`                                  | *…*                                            | client+server |

---

## 5 — Data model (Drizzle)

```ts
export const configs = pgTable("configs", {
  id: text("id").primaryKey(),
  shop: text("shop").notNull(),
  slug: text("slug").notNull(),
  currentVersionId: text("current_version_id").references(() => configVersions.id),
  createdAt: timestamp("created_at").defaultNow()
});

export const configVersions = pgTable("config_versions", {
  id: text("id").primaryKey(),
  configId: text("config_id").references(() => configs.id),
  data: jsonb("data").notNull(),              // SiteConfig blob
  createdAt: timestamp("created_at").defaultNow()
});

export type SiteConfig = { /* see schema earlier */ };
```

---

## 6 — Critical features (public app)

1. **/g/\[configId] RSC route**

   * Fetch JSON from R2 (Edge GET, 300 s SWR)
   * Stream server HTML for hero images & first grid items.
   * Hydrate *only* QuickViewModal, CartDrawer, MobileTabs.
2. **Quick-view path** `/g/[configId]/qv/[productId]` with Next’s modal segment.
3. **Shopify price hydration** via Edge function `GET /api/price/:variantId` (5 min cache).
4. **Cart** (Zustand) persisted in localStorage; backup to Vercel KV keyed by HMAC cookie.
5. **Checkout** builds variant=qty query and redirects to `/cart`.

---

## 7 — Admin (embedded) features

| Feature           | Acceptance criteria                                                              |
| ----------------- | -------------------------------------------------------------------------------- |
| OAuth flow        | After install, redirect to `/admin` inside Shopify iframe with valid JWT cookie. |
| Drag-drop builder | Can reorder sections, edit cards; hot-preview updates in <1 s.                   |
| Image upload      | Drag file → presigned R2 URL; preview shows AVIF + WebP variants.                |
| Versioning        | “Publish” creates new row in `config_versions`; admin can rollback.              |
| Live preview      | Button opens `/g/[configId]?draft=versionId` in new tab.                         |
| Permissions       | Only shop owner email(s) allowed; 403 otherwise.                                 |

---

## 8 — Performance budgets

| Metric                    | Target              |
| ------------------------- | ------------------- |
| LCP (4 G, Moto G4)        | **< 1.5 s**         |
| First Input Delay / INP   | **< 120 ms**        |
| JS transferred first load | **≤ 120 kB** Brotli |
| CLS                       | **< 0.1**           |
| Edge cold-start           | **< 200 ms**        |

Run Lighthouse in GitHub Actions; fail CI if budgets exceeded.

---

## 9 — Security constraints

* Verify `hmac` on every embedded iframe request (`signature_v2` middleware).
* Store Shopify tokens encrypted (PlanetScale `pscale vault` or Neon KMS).
* All Edge responses set `Content-Security-Policy` disallowing `unsafe-eval`.
* Webhooks: compare `X-Shopify-Hmac-Sha256`, reject if timestamp > 5 min.
* Serve static assets with `immutable, max-age=31536000`.

---

## 10 — Testing matrix

| Layer       | Tool                          | Minimum                                                |
| ----------- | ----------------------------- | ------------------------------------------------------ |
| Unit        | Vitest                        | Reducers, Drizzle models, tRPC routers                 |
| Component   | Storybook + Jest DOM          | ProductCard, QuickViewModal                            |
| E2E         | Playwright (mobile + desktop) | Add to cart, Checkout redirect, Saving config in admin |
| Perf        | Lighthouse CI                 | Budgets in §8                                          |
| CI duration | ≤ 5 min on PR                 |                                                        |

---

## 11 — Step-by-step roadmap for the AI agent

1. **Bootstrap repo** (`npx create-next-app@latest --app --ts --tailwind`).
2. Add **TurboRepo** root; move app into `apps/public`.
3. Scaffold **Drizzle schema** in `packages/db`, run `drizzle-kit push` to Neon dev.
4. Create **tRPC router** (`createTRPCServer`), initial endpoint `getConfig(configId)`.
5. Implement **R2 upload** Lambda (Edge Runtime) with presigned URLs.
6. Build `Renderer` that walks `SiteConfig` and renders components.
7. Add cart Zustand store + UI (shadcn Sheet).
8. Integrate **Shopify Storefront** GraphQL query with `fetchCache: revalidate(300)`.
9. Scaffold **admin app**; add OAuth, App Bridge `Provider`, Polaris.
10. Build **builder UI**: DnD list, card editor, preview iframe.
11. Set **GitHub Actions** with Biome lint, Vitest, Playwright, Lighthouse.
12. Configure **Vercel project** (Edge), attach secrets, push to prod.
13. QA on production URL; run full E2E suite; verify budgets.
14. Create **README** with deploy guide and API docs.

---

## 12 — Acceptance criteria (definition of done)

1. Visiting `/g/<configId>` from a phone on 4 G shows hero image in ≤ 1.5 s.
2. Clicking an Instagram card opens Quick-view modal in < 200 ms; Add to Cart updates badge.
3. “Checkout” redirects to Shopify cart URL with correct variant query.
4. Admin app loads inside Shopify admin; saving changes creates new version row and updates public site within 1 s after edge cache invalidation.
5. All CI checks pass: unit, E2E, Lighthouse budgets, SAST.
6. No console errors, Sentry error rate < 0.1 % over 24 h.

---

## 13 — Relevant reference material (links)

* Next.js 15 App Router with RSC: [https://beta.nextjs.org/docs](https://beta.nextjs.org/docs)
* Shopify App Bridge 2 + OAuth: [https://shopify.dev/docs/apps/auth](https://shopify.dev/docs/apps/auth)
* Polaris design tokens v12: [https://polaris.shopify.com/](https://polaris.shopify.com/)
* Bun edge runtime docs: [https://bun.sh/docs/runtime](https://bun.sh/docs/runtime)
* Drizzle ORM: [https://orm.drizzle.team/](https://orm.drizzle.team/)
* PlanetScale quick-start: [https://planetscale.com/docs](https://planetscale.com/docs)
* Cloudflare R2 presigned URL: [https://developers.cloudflare.com/r2/examples/upload-with-presigned-url/](https://developers.cloudflare.com/r2/examples/upload-with-presigned-url/)
* Workers AI: [https://developers.cloudflare.com/ai](https://developers.cloudflare.com/ai)

---

### Hand this entire packet to the AI agent.

If they follow the roadmap and meet the acceptance criteria, you’ll have a production-ready, future-proof platform that delivers the micro-site experience you want and a robust admin you can tweak forever.
